<===================( Automate : #20 )======================>

 # d'états ----------> 9
 # de transitions ---> 8
 Etats --------------> [0, 1, 2, 3, 4, 5, 6, 7, 8]
 Alphabet -----------> [a, b, c, d]


E--> **(0)**
(0)-d->(5)

E--> **(1)**
(1)-a->(2)

 **(2)**
(2)-b->(3)

 **(3)**
(3)-c->(4)

 **(4)**
(4)-d->(5)

 **(5)** -->S

E--> **(6)**
(6)-a->(2)

E--> **(7)**
(7)-b->(3)

E--> **(8)**
(8)-c->(4)

<=================================================>

---------------------------> d : Déterminisation
---------------------------> s : Standardisation
---------------------------> c : Complétion
---------------------------> L'automate est fini
---------------------------> a : Déterminisation complétion synchrone/asynchrone
---------------------------> m : Miniminisation
---------------------------> k : Langage complementaire

Déterminisation (d) :

L'automate #20 n'est pas déterministe, car il possède 5 entrees.

<===================( Automate : Determinisé )======================>

 # d'états ----------> 5
 # de transitions ---> 7
 Etats --------------> [01678, 2, 3, 4, 5]
 Alphabet -----------> [a, b, c, d]


E--> **(01678)**
(01678)-d->(5)
(01678)-a->(2)
(01678)-b->(3)
(01678)-c->(4)

 **(2)**
(2)-b->(3)

 **(3)**
(3)-c->(4)

 **(4)**
(4)-d->(5)

 **(5)** -->S

<=================================================>

Standardisation (s) :

L'automate #20 n'est pas standard, car il possède 5 entrees.

<===================( Automate : Standardisé )======================>

 # d'états ----------> 10
 # de transitions ---> 13
 Etats --------------> [0, 1, 2, 3, 4, 5, 6, 7, 8, i]
 Alphabet -----------> [a, b, c, d]


E--> **(i)**
(i)-d->(5)
(i)-a->(2)
(i)-b->(3)
(i)-c->(4)

 **(0)**
(0)-d->(5)

 **(1)**
(1)-a->(2)

 **(2)**
(2)-b->(3)

 **(3)**
(3)-c->(4)

 **(4)**
(4)-d->(5)

 **(5)** -->S

 **(6)**
(6)-a->(2)

 **(7)**
(7)-b->(3)

 **(8)**
(8)-c->(4)

<=================================================>

Complétion (c) :

L'automate #20 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.  2a.  3a.  4a.  5a.  7a.  8a.
 b ->  0b.  1b.  3b.  4b.  5b.  6b.  8b.
 c ->  0c.  1c.  2c.  4c.  5c.  6c.  7c.
 d ->  1d.  2d.  3d.  5d.  6d.  7d.  8d.

<===================( Automate : Complet )======================>

 # d'états ----------> 10
 # de transitions ---> 40
 Etats --------------> [0, 1, 2, 3, 4, 5, 6, 7, 8, P]
 Alphabet -----------> [a, b, c, d]


E--> **(0)**
(0)-d->(5)
(0)-a->(P)
(0)-b->(P)
(0)-c->(P)

E--> **(1)**
(1)-a->(2)
(1)-b->(P)
(1)-c->(P)
(1)-d->(P)

 **(2)**
(2)-b->(3)
(2)-a->(P)
(2)-c->(P)
(2)-d->(P)

 **(3)**
(3)-c->(4)
(3)-a->(P)
(3)-b->(P)
(3)-d->(P)

 **(4)**
(4)-d->(5)
(4)-a->(P)
(4)-b->(P)
(4)-c->(P)

 **(5)** -->S
(5)-a->(P)
(5)-b->(P)
(5)-c->(P)
(5)-d->(P)

E--> **(6)**
(6)-a->(2)
(6)-b->(P)
(6)-c->(P)
(6)-d->(P)

E--> **(7)**
(7)-b->(3)
(7)-a->(P)
(7)-c->(P)
(7)-d->(P)

E--> **(8)**
(8)-c->(4)
(8)-a->(P)
(8)-b->(P)
(8)-d->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>

Déterminisation complétion synchrone/asynchrone (a) :

L'automate #20 n'est pas standard, car il possède 5 entrees.

L'automate #20 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.  2a.  3a.  4a.  5a.  7a.  8a.
 b ->  0b.  1b.  3b.  4b.  5b.  6b.  8b.
 c ->  0c.  1c.  2c.  4c.  5c.  6c.  7c.
 d ->  1d.  2d.  3d.  5d.  6d.  7d.  8d.

L'automate #20 n'est pas déterministe, car il possède 5 entrees.

<===================( Automate : #20 )======================>

 # d'états ----------> 6
 # de transitions ---> 24
 Etats --------------> [01678, 2, 3, 4, 5, P]
 Alphabet -----------> [a, b, c, d]


E--> **(01678)**
(01678)-d->(5)
(01678)-a->(2)
(01678)-b->(3)
(01678)-c->(4)

 **(2)**
(2)-b->(3)
(2)-a->(P)
(2)-c->(P)
(2)-d->(P)

 **(3)**
(3)-c->(4)
(3)-a->(P)
(3)-b->(P)
(3)-d->(P)

 **(4)**
(4)-d->(5)
(4)-a->(P)
(4)-b->(P)
(4)-c->(P)

 **(5)** -->S
(5)-a->(P)
(5)-b->(P)
(5)-c->(P)
(5)-d->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>

Minimisation (m) :

>>>    L'automate ne change pas !

<===================( Automate : Minimisé )======================>

 # d'états ----------> 6
 # de transitions ---> 24
 Etats --------------> [01678, 2, 3, 4, 5, P]
 Alphabet -----------> [a, b, c, d]


E--> **(01678)**
(01678)-a->(2)
(01678)-b->(3)
(01678)-c->(4)
(01678)-d->(5)

 **(2)**
(2)-a->(P)
(2)-b->(3)
(2)-c->(P)
(2)-d->(P)

 **(3)**
(3)-a->(P)
(3)-b->(P)
(3)-c->(4)
(3)-d->(P)

 **(4)**
(4)-a->(P)
(4)-b->(P)
(4)-c->(P)
(4)-d->(5)

 **(5)** -->S
(5)-a->(P)
(5)-b->(P)
(5)-c->(P)
(5)-d->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>



Langage complémentaire (k) :

<===================( Automate : Complémentaire )======================>

 # d'états ----------> 6
 # de transitions ---> 24
 Etats --------------> [01678, 2, 3, 4, 5, P]
 Alphabet -----------> [a, b, c, d]


E--> **(01678)** -->S
(01678)-d->(5)
(01678)-a->(2)
(01678)-b->(3)
(01678)-c->(4)

 **(2)** -->S
(2)-b->(3)
(2)-a->(P)
(2)-c->(P)
(2)-d->(P)

 **(3)** -->S
(3)-c->(4)
(3)-a->(P)
(3)-b->(P)
(3)-d->(P)

 **(4)** -->S
(4)-d->(5)
(4)-a->(P)
(4)-b->(P)
(4)-c->(P)

 **(5)**
(5)-a->(P)
(5)-b->(P)
(5)-c->(P)
(5)-d->(P)

 **(P)** -->S
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>