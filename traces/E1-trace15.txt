<===================( Automate : #15 )======================>

 # d'états ----------> 5
 # de transitions ---> 17
 Etats --------------> [0, 1, 2, 3, 4]
 Alphabet -----------> [a, b, c, d]


 **(0)**
(0)-a->(0)

E--> **(1)**
(1)-a->(1)
(1)-b->(2)
(1)-c->(3)
(1)-d->(4)

 **(2)**
(2)-a->(0)
(2)-b->(2)
(2)-c->(3)
(2)-d->(4)

 **(3)**
(3)-a->(0)
(3)-b->(0)
(3)-c->(3)
(3)-d->(4)

 **(4)** -->S
(4)-a->(0)
(4)-b->(0)
(4)-c->(0)
(4)-d->(4)

<=================================================>

---------------------------> L'automate est déterministe
---------------------------> s : Standardisation
---------------------------> c : Complétion
---------------------------> L'automate est fini
---------------------------> a : Déterminisation complétion synchrone/asynchrone
---------------------------> m : Miniminisation
---------------------------> k : Langage complementaire

Standardisation (s) :

L'automate #15 n'est pas standard, à cause des transitions suivantes :
 1a1
<===================( Automate : Standardisé )======================>

 # d'états ----------> 6
 # de transitions ---> 21
 Etats --------------> [0, 1, 2, 3, 4, i]
 Alphabet -----------> [a, b, c, d]


E--> **(i)**
(i)-a->(1)
(i)-b->(2)
(i)-c->(3)
(i)-d->(4)

 **(0)**
(0)-a->(0)

 **(1)**
(1)-a->(1)
(1)-b->(2)
(1)-c->(3)
(1)-d->(4)

 **(2)**
(2)-a->(0)
(2)-b->(2)
(2)-c->(3)
(2)-d->(4)

 **(3)**
(3)-a->(0)
(3)-b->(0)
(3)-c->(3)
(3)-d->(4)

 **(4)** -->S
(4)-a->(0)
(4)-b->(0)
(4)-c->(0)
(4)-d->(4)

<=================================================>


Complétion (c) :

L'automate #15 n'est pas complet, à cause des transitions manquantes :
 b ->  0b.
 c ->  0c.
 d ->  0d.

<===================( Automate : Complet )======================>

 # d'états ----------> 6
 # de transitions ---> 24
 Etats --------------> [0, 1, 2, 3, 4, P]
 Alphabet -----------> [a, b, c, d]


 **(0)**
(0)-a->(0)
(0)-b->(P)
(0)-c->(P)
(0)-d->(P)

E--> **(1)**
(1)-a->(1)
(1)-b->(2)
(1)-c->(3)
(1)-d->(4)

 **(2)**
(2)-a->(0)
(2)-b->(2)
(2)-c->(3)
(2)-d->(4)

 **(3)**
(3)-a->(0)
(3)-b->(0)
(3)-c->(3)
(3)-d->(4)

 **(4)** -->S
(4)-a->(0)
(4)-b->(0)
(4)-c->(0)
(4)-d->(4)

 **(P)**
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>



Déterminisation complétion synchrone/asynchrone (a) :

L'automate #15 n'est pas standard, à cause des transitions suivantes :
 1a1
L'automate #15 n'est pas complet, à cause des transitions manquantes :
 b ->  0b.
 c ->  0c.
 d ->  0d.

<===================( Automate : #15 )======================>

 # d'états ----------> 6
 # de transitions ---> 24
 Etats --------------> [0, 1, 2, 3, 4, P]
 Alphabet -----------> [a, b, c, d]


 **(0)**
(0)-a->(0)
(0)-b->(P)
(0)-c->(P)
(0)-d->(P)

E--> **(1)**
(1)-a->(1)
(1)-b->(2)
(1)-c->(3)
(1)-d->(4)

 **(2)**
(2)-a->(0)
(2)-b->(2)
(2)-c->(3)
(2)-d->(4)

 **(3)**
(3)-a->(0)
(3)-b->(0)
(3)-c->(3)
(3)-d->(4)

 **(4)** -->S
(4)-a->(0)
(4)-b->(0)
(4)-c->(0)
(4)-d->(4)

 **(P)**
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>


Minimisation (m) :

>>>    Fusion des Etats : 0 et de P ...
<===================( Automate : Minimisé )======================>

 # d'états ----------> 5
 # de transitions ---> 20
 Etats --------------> [0P, 1, 2, 3, 4]
 Alphabet -----------> [a, b, c, d]


 **(0P)**
(0P)-a->(0P)
(0P)-b->(0P)
(0P)-c->(0P)
(0P)-d->(0P)

E--> **(1)**
(1)-a->(1)
(1)-b->(2)
(1)-c->(3)
(1)-d->(4)

 **(2)**
(2)-a->(0P)
(2)-b->(2)
(2)-c->(3)
(2)-d->(4)

 **(3)**
(3)-a->(0P)
(3)-b->(0P)
(3)-c->(3)
(3)-d->(4)

 **(4)** -->S
(4)-a->(0P)
(4)-b->(0P)
(4)-c->(0P)
(4)-d->(4)

<=================================================>

<=================================================>

Langage complémentaire (k) :

<===================( Automate : Complémentaire )======================>

 # d'états ----------> 6
 # de transitions ---> 24
 Etats --------------> [0, 1, 2, 3, 4, P]
 Alphabet -----------> [a, b, c, d]


 **(0)** -->S
(0)-a->(0)
(0)-b->(P)
(0)-c->(P)
(0)-d->(P)

E--> **(1)** -->S
(1)-a->(1)
(1)-b->(2)
(1)-c->(3)
(1)-d->(4)

 **(2)** -->S
(2)-a->(0)
(2)-b->(2)
(2)-c->(3)
(2)-d->(4)

 **(3)** -->S
(3)-a->(0)
(3)-b->(0)
(3)-c->(3)
(3)-d->(4)

 **(4)**
(4)-a->(0)
(4)-b->(0)
(4)-c->(0)
(4)-d->(4)

 **(P)** -->S
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)
(P)-d->(P)

<=================================================>
