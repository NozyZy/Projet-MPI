<===================( Automate : #32 )======================>

 # d'états ----------> 22
 # de transitions ---> 30
 Etats --------------> [0, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 3, 4, 5, 6, 7, 8, 9]
 Alphabet -----------> [a, b, c]


E--> **(0)**
(0)-*->(1)
(0)-*->(10)

 **(1)**
(1)-*->(2)
(1)-*->(6)

 **(2)**
(2)-*->(3)
(2)-*->(5)

 **(3)**
(3)-b->(4)

 **(4)**
(4)-*->(3)
(4)-*->(5)

 **(5)**
(5)-*->(8)

 **(6)**
(6)-a->(7)

 **(7)**
(7)-*->(8)

 **(8)**
(8)-c->(9)

 **(9)**
(9)-*->(21)

 **(10)**
(10)-*->(11)
(10)-*->(15)

 **(11)**
(11)-*->(12)
(11)-*->(14)

 **(12)**
(12)-a->(13)

 **(13)**
(13)-*->(12)
(13)-*->(14)

 **(14)**
(14)-*->(17)

 **(15)**
(15)-b->(16)

 **(16)**
(16)-*->(17)

 **(17)**
(17)-*->(18)
(17)-*->(20)

 **(18)**
(18)-c->(19)

 **(19)**
(19)-*->(18)
(19)-*->(20)

 **(20)**
(20)-*->(21)

 **(21)** -->S

<=================================================>

---------------------------> L'automate est déterministe
---------------------------> L'automate est standard
---------------------------> c : Complétion
---------------------------> b : Eliminer les transitions epsilon
---------------------------> a : Déterminisation complétion synchrone/asynchrone
---------------------------> m : Miniminisation
---------------------------> k : Langage complementaire

Complétion (c) :

L'automate #31 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.  3a.  4a.  5a.  6a.  7a.
 b ->  0b.  1b.  6b.  7b.

<===================( Automate : Complet )======================>

 # d'états ----------> 9
 # de transitions ---> 24
 Etats --------------> [0, 1, 2, 3, 4, 5, 6, 7, P]
 Alphabet -----------> [a, b]


E--> **(0)**
(0)-*->(1)
(0)-*->(4)
(0)-a->(P)
(0)-b->(P)

 **(1)**
(1)-a->(2)
(1)-*->(3)
(1)-b->(P)

 **(2)**
(2)-b->(1)
(2)-a->(3)

 **(3)**
(3)-b->(3)
(3)-*->(7)
(3)-a->(P)

 **(4)**
(4)-b->(5)
(4)-a->(P)

 **(5)**
(5)-b->(6)
(5)-a->(P)

 **(6)**
(6)-*->(4)
(6)-*->(7)
(6)-a->(P)
(6)-b->(P)

 **(7)** -->S
(7)-a->(P)
(7)-b->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>

Eliminer les transitions epsilon (b) :

L'automate #31 est asynchrone, à cause des transitions suivantes :
 0*1  0*4  1*3  3*7  6*4  6*7
<===================( Automate : Automate fini )======================>

 # d'états ----------> 6
 # de transitions ---> 9
 Etats --------------> [0', 1', 2', 3', 3'5', 3'6']
 Alphabet -----------> [a, b]


E--> **(0')** -->S
(0')-a->(2')
(0')-b->(3'5')

 **(3'5')** -->S
(3'5')-b->(3'6')

 **(3'6')** -->S
(3'6')-b->(3'5')

 **(2')**
(2')-a->(3')
(2')-b->(1')

 **(1')** -->S
(1')-a->(2')
(1')-b->(3')

 **(3')** -->S
(3')-b->(3')

<=================================================>

Déterminisation complétion synchrone/asynchrone (a) :

L'automate #31 est asynchrone, à cause des transitions suivantes :
 0*1  0*4  1*3  3*7  6*4  6*7
L'automate #31 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.  3a.  4a.  5a.  6a.  7a.
 b ->  0b.  1b.  6b.  7b.

<===================( Automate : #31 )======================>

 # d'états ----------> 7
 # de transitions ---> 14
 Etats --------------> [0', 1', 2', 3', 3'5', 3'6', P]
 Alphabet -----------> [a, b]


E--> **(0')** -->S
(0')-a->(2')
(0')-b->(3'5')

 **(3'5')** -->S
(3'5')-b->(3'6')
(3'5')-a->(P)

 **(3'6')** -->S
(3'6')-b->(3'5')
(3'6')-a->(P)

 **(2')**
(2')-a->(3')
(2')-b->(1')

 **(1')** -->S
(1')-a->(2')
(1')-b->(3')

 **(3')** -->S
(3')-b->(3')
(3')-a->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>

Minimisation (m) :

>>>    Fusion des Etats : 9'19' et de 19' ...
>>>    Fusion des Etats : 7'13' et de 13' ...

<===================( Automate : #32 )======================>

 # d'états ----------> 7
 # de transitions ---> 21
 Etats --------------> [0', 4', 4'16', 7'13'13', 9', 9'19'19', P]
 Alphabet -----------> [a, b, c]


 **(7'13'13')** -->S
(7'13'13')-a->(7'13'13')
(7'13'13')-b->(P)
(7'13'13')-c->(9'19'19')

 **(9'19'19')** -->S
(9'19'19')-a->(P)
(9'19'19')-b->(P)
(9'19'19')-c->(9'19'19')

E--> **(0')** -->S
(0')-a->(''137)
(0')-b->(''146)
(0')-c->(''199)

 **(4'16')** -->S
(4'16')-a->(P)
(4'16')-b->(4')
(4'16')-c->(9'19'19')

 **(4')**
(4')-a->(P)
(4')-b->(4')
(4')-c->(9')

 **(9')** -->S
(9')-a->(P)
(9')-b->(P)
(9')-c->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)

<=================================================>


Langage complémentaire (k) :

<===================( Automate : Complémentaire )======================>

 # d'états ----------> 9
 # de transitions ---> 27
 Etats --------------> [0', 13', 19', 4', 4'16', 7'13', 9', 9'19', P]
 Alphabet -----------> [a, b, c]


E--> **(0')** -->S
(0')-a->(''137)
(0')-b->(''146)
(0')-c->(''199)

 **(9'19')** -->S
(9'19')-c->(19')
(9'19')-a->(P)
(9'19')-b->(P)

 **(19')** -->S
(19')-c->(19')
(19')-a->(P)
(19')-b->(P)

 **(4'16')** -->S
(4'16')-b->(4')
(4'16')-c->(9'19')
(4'16')-a->(P)

 **(4')** -->S
(4')-b->(4')
(4')-c->(9')
(4')-a->(P)

 **(9')** -->S
(9')-a->(P)
(9')-b->(P)
(9')-c->(P)

 **(7'13')** -->S
(7'13')-a->(13')
(7'13')-c->(9'19')
(7'13')-b->(P)

 **(13')** -->S
(13')-a->(13')
(13')-c->(19')
(13')-b->(P)

 **(P)** -->S
(P)-a->(P)
(P)-b->(P)
(P)-c->(P)

<=================================================>