<===================( Automate : #26 )======================>

 # d'états ----------> 4
 # de transitions ---> 6
 Etats --------------> [0, 1, 2, 3]
 Alphabet -----------> [a, b]


 **(0)** -->S

E--> **(1)**
(1)-a->(2)
(1)-b->(2)

 **(2)**
(2)-a->(0)
(2)-b->(3)

 **(3)**
(3)-a->(3)
(3)-b->(3)

<=================================================>

---------------------------> L'automate est déterministe
---------------------------> L'automate est standard
---------------------------> c : Complétion
---------------------------> L'automate est fini
---------------------------> a : Déterminisation complétion synchrone/asynchrone
---------------------------> m : Miniminisation
---------------------------> k : Langage complementaire

Complétion (c) :

'automate #26 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.
 b ->  0b.

<===================( Automate : Complet )======================>

 # d'états ----------> 5
 # de transitions ---> 10
 Etats --------------> [0, 1, 2, 3, P]
 Alphabet -----------> [a, b]


 **(0)** -->S
(0)-a->(P)
(0)-b->(P)

E--> **(1)**
(1)-a->(2)
(1)-b->(2)

 **(2)**
(2)-a->(0)
(2)-b->(3)

 **(3)**
(3)-a->(3)
(3)-b->(3)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>

Déterminisation complétion synchrone/asynchrone (a) :

L'automate #26 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.
 b ->  0b.

<===================( Automate : #26 )======================>

 # d'états ----------> 5
 # de transitions ---> 10
 Etats --------------> [0, 1, 2, 3, P]
 Alphabet -----------> [a, b]


 **(0)** -->S
(0)-a->(P)
(0)-b->(P)

E--> **(1)**
(1)-a->(2)
(1)-b->(2)

 **(2)**
(2)-a->(0)
(2)-b->(3)

 **(3)**
(3)-a->(3)
(3)-b->(3)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>

Minimisation (m) :

>>>    Fusion des Etats : 3 et de P ...

<===================( Automate : Minimisé )======================>

 # d'états ----------> 4
 # de transitions ---> 8
 Etats --------------> [0, 1, 2, 3P]
 Alphabet -----------> [a, b]


 **(3P)**
(3P)-a->(3P)
(3P)-b->(3P)

 **(0)** -->S
(0)-a->(3P)
(0)-b->(3P)

E--> **(1)**
(1)-a->(2)
(1)-b->(2)

 **(2)**
(2)-a->(0)
(2)-b->(3P)

<=================================================>



Langage complémentaire (k) :

<===================( Automate : Complémentaire )======================>

 # d'états ----------> 5
 # de transitions ---> 10
 Etats --------------> [0, 1, 2, 3, P]
 Alphabet -----------> [a, b]


 **(0)**
(0)-a->(P)
(0)-b->(P)

E--> **(1)** -->S
(1)-a->(2)
(1)-b->(2)

 **(2)** -->S
(2)-a->(0)
(2)-b->(3)

 **(3)** -->S
(3)-a->(3)
(3)-b->(3)

 **(P)** -->S
(P)-a->(P)
(P)-b->(P)

<=================================================>