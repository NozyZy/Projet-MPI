<===================( Automate : #04 )======================>

 # d'états ----------> 2
 # de transitions ---> 1
 Etats --------------> [0, 1]
 Alphabet -----------> [a]


E--> **(0)**
(0)-a->(1)

 **(1)**

<=================================================>

---------------------------> L'automate est déterministe
---------------------------> L'automate est standard
---------------------------> c : Complétion
---------------------------> L'automate est fini
---------------------------> a : Déterminisation complétion synchrone/asynchrone
---------------------------> m : Miniminisation


Complétion (c) :

L'automate #04 n'est pas complet, à cause des transitions manquantes :
 a ->  1a.

<===================( Automate : Complet )======================>

 # d'états ----------> 3
 # de transitions ---> 3
 Etats --------------> [0, 1, P]
 Alphabet -----------> [a]


E--> **(0)**
(0)-a->(1)

 **(1)**
(1)-a->(P)

 **(P)**
(P)-a->(P)

<=================================================>


Déterminisation complétion synchrone/asynchrone (a) :

L'automate #04 n'est pas complet, à cause des transitions manquantes :
 a ->  1a.

<===================( Automate : #04 )======================>

 # d'états ----------> 3
 # de transitions ---> 3
 Etats --------------> [0, 1, P]
 Alphabet -----------> [a]


E--> **(0)**
(0)-a->(1)

 **(1)**
(1)-a->(P)

 **(P)**
(P)-a->(P)

<=================================================>


Minimisation (m) :

>>>    Fusion des Etats : 0 et de 1 ...
>>>    Fusion des Etats : P et de 01 ...

<===================( Automate : Minimisé )======================>

 # d'états ----------> 1
 # de transitions ---> 1
 Etats --------------> [P01]
 Alphabet -----------> [a]


E--> **(P01)**
(P01)-a->(P01)

<=================================================>


Langage complémentaire (k) :

<===================( Automate : Complémentaire )======================>

 # d'états ----------> 3
 # de transitions ---> 3
 Etats --------------> [0, 1, P]
 Alphabet -----------> [a]


E--> **(0)** -->S
(0)-a->(1)

 **(1)** -->S
(1)-a->(P)

 **(P)** -->S
(P)-a->(P)

<=================================================>