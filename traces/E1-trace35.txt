<===================( Automate : #35 )======================>

 # d'états ----------> 11
 # de transitions ---> 13
 Etats --------------> [0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9]
 Alphabet -----------> [a, b]


E--> **(0)**
(0)-*->(1)
(0)-*->(4)

 **(1)**
(1)-a->(2)

 **(2)**
(2)-b->(3)

 **(3)**
(3)-*->(10)

 **(4)**
(4)-*->(5)
(4)-*->(8)

 **(5)**
(5)-a->(6)

 **(6)**
(6)-b->(7)

 **(7)**
(7)-*->(5)
(7)-*->(8)

 **(8)**
(8)-a->(9)

 **(9)**
(9)-*->(10)

 **(10)** -->S

<=================================================>

---------------------------> L'automate est déterministe
---------------------------> L'automate est standard
---------------------------> c : Complétion
---------------------------> b : Eliminer les transitions epsilon
---------------------------> a : Déterminisation complétion synchrone/asynchrone
---------------------------> m : Miniminisation
---------------------------> k : Langage complementaire

Complétion (c) :

L'automate #35 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.  2a.  3a.  4a.  6a.  7a.  9a.  10a.
 b ->  0b.  1b.  3b.  4b.  5b.  7b.  8b.  9b.  10b.

<===================( Automate : Complet )======================>

 # d'états ----------> 12
 # de transitions ---> 32
 Etats --------------> [0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9, P]
 Alphabet -----------> [a, b]


E--> **(0)**
(0)-*->(1)
(0)-*->(4)
(0)-a->(P)
(0)-b->(P)

 **(1)**
(1)-a->(2)
(1)-b->(P)

 **(2)**
(2)-b->(3)
(2)-a->(P)

 **(3)**
(3)-*->(10)
(3)-a->(P)
(3)-b->(P)

 **(4)**
(4)-*->(5)
(4)-*->(8)
(4)-a->(P)
(4)-b->(P)

 **(5)**
(5)-a->(6)
(5)-b->(P)

 **(6)**
(6)-b->(7)
(6)-a->(P)

 **(7)**
(7)-*->(5)
(7)-*->(8)
(7)-a->(P)
(7)-b->(P)

 **(8)**
(8)-a->(9)
(8)-b->(P)

 **(9)**
(9)-*->(10)
(9)-a->(P)
(9)-b->(P)

 **(10)** -->S
(10)-a->(P)
(10)-b->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>

Eliminer les transitions epsilon (b) :

L'automate #35 est asynchrone, à cause des transitions suivantes :
 0*1  0*4  3*10  4*5  4*8  7*5  7*8  9*10
<===================( Automate : Automate fini )======================>

 # d'états ----------> 5
 # de transitions ---> 5
 Etats --------------> [0', 2'6'9', 3'7', 6'9', 7']
 Alphabet -----------> [a, b]


E--> **(0')**
(0')-a->(2'6'9')

 **(2'6'9')** -->S
(2'6'9')-b->(3'7')

 **(3'7')** -->S
(3'7')-a->(6'9')

 **(6'9')** -->S
(6'9')-b->(7')

 **(7')**
(7')-a->(6'9')

<=================================================>

Déterminisation complétion synchrone/asynchrone (a) :


L'automate #35 est asynchrone, à cause des transitions suivantes :
 0*1  0*4  3*10  4*5  4*8  7*5  7*8  9*10
L'automate #35 n'est pas complet, à cause des transitions manquantes :
 a ->  0a.  2a.  3a.  4a.  6a.  7a.  9a.  10a.
 b ->  0b.  1b.  3b.  4b.  5b.  7b.  8b.  9b.  10b.

<===================( Automate : #35 )======================>

 # d'états ----------> 6
 # de transitions ---> 12
 Etats --------------> [0', 2'6'9', 3'7', 6'9', 7', P]
 Alphabet -----------> [a, b]


E--> **(0')**
(0')-a->(2'6'9')
(0')-b->(P)

 **(2'6'9')** -->S
(2'6'9')-b->(3'7')
(2'6'9')-a->(P)

 **(3'7')** -->S
(3'7')-a->(6'9')
(3'7')-b->(P)

 **(6'9')** -->S
(6'9')-b->(7')
(6'9')-a->(P)

 **(7')**
(7')-a->(6'9')
(7')-b->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>

Minimisation (m) :

>>>    L'automate ne change pas !

<===================( Automate : #35 )======================>

 # d'états ----------> 6
 # de transitions ---> 12
 Etats --------------> [0', 2'6'9', 3'7', 6'9', 7', P]
 Alphabet -----------> [a, b]


E--> **(0')**
(0')-a->('''269)
(0')-b->(P)

 **(2'6'9')** -->S
(2'6'9')-a->(P)
(2'6'9')-b->(3'7')

 **(3'7')** -->S
(3'7')-a->(6'9')
(3'7')-b->(P)

 **(6'9')** -->S
(6'9')-a->(P)
(6'9')-b->(7')

 **(7')**
(7')-a->(6'9')
(7')-b->(P)

 **(P)**
(P)-a->(P)
(P)-b->(P)

<=================================================>


Langage complémentaire (k) :

<===================( Automate : Complémentaire )======================>

 # d'états ----------> 6
 # de transitions ---> 12
 Etats --------------> [0', 2'6'9', 3'7', 6'9', 7', P]
 Alphabet -----------> [a, b]


E--> **(0')** -->S
(0')-a->('''269)
(0')-b->(P)

 **(2'6'9')** -->S
(2'6'9')-b->(3'7')
(2'6'9')-a->(P)

 **(3'7')** -->S
(3'7')-a->(6'9')
(3'7')-b->(P)

 **(6'9')** -->S
(6'9')-b->(7')
(6'9')-a->(P)

 **(7')** -->S
(7')-a->(6'9')
(7')-b->(P)

 **(P)** -->S
(P)-a->(P)
(P)-b->(P)

<=================================================>